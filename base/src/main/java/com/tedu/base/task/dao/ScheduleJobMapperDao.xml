<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tedu.base.task.dao.ScheduleJobMapperDao">
	<resultMap id="BaseResultMap" type="com.tedu.base.task.model.ScheduleJobModel">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="cron_expression" property="expression" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="" property="param" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap id="EmailResultMap" type="com.tedu.base.msg.mail.Email">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="send_name" property="sendName" jdbcType="VARCHAR" />
		<result column="char_set" property="charSet" jdbcType="VARCHAR" />
		<result column="receive_name" property="receiveName" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="subject" property="subject" jdbcType="VARCHAR" />
		<result column="result" property="result" jdbcType="VARCHAR" />
		<result column="sent_date" property="sentDate" jdbcType="DATE" />
		<result column="send_count" property="sendCount" jdbcType="BIGINT" />
	</resultMap>
	<!-- <sql id="Base_Column_List">
		job_id, create_time, update_time, job_name, job_group, job_status,
		cron_expression,
		description, bean_class, is_concurrent, spring_id, method_name
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		SELECT
			j.`name`,
		j.cron_expression as expression,
			d1.`code` AS `status`,
			d2.`code` AS `concurrent`,
			d3.`code` AS type,
			GROUP_CONCAT(p.`name`) AS pName,
			GROUP_CONCAT(p. VALUE) AS pvalue
		FROM
			t_schedule_job j
		LEFT JOIN t_schedule_param p ON p.job_id = j.id
		LEFT JOIN t_dict d1 ON d1.`code` = j.`status`
		AND d1.cata_code = 't_schedule_job.status'
		LEFT JOIN t_dict d2 ON d2.`code` = j. CONCURRENT
		AND d2.cata_code = 't_schedule_job.concurrent'
		LEFT JOIN t_dict d3 ON d3.`code` = j.type
		AND d3.cata_code = 't_schedule_job.type'
		LEFT JOIN t_dict d4 ON d4.`code` = j.type
		AND d4.cata_code = 't_schedule_param.name'
		where j.id = #{jobId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from task_schedule_job
		where job_id = #{jobId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.tedu.base.task.model.ScheduleJobModel">
		insert into task_schedule_job (job_id, create_time, update_time,
		job_name, job_group, job_status,
		cron_expression, description, bean_class,
		is_concurrent, spring_id, method_name
		)
		values (#{jobId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, #{jobStatus,jdbcType=VARCHAR},
		#{cronExpression,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
		#{beanClass,jdbcType=VARCHAR},
		#{isConcurrent,jdbcType=VARCHAR}, #{springId,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.tedu.base.task.model.ScheduleJobModel">
		insert into task_schedule_job
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="jobId != null">
				job_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="jobName != null">
				job_name,
			</if>
			<if test="jobGroup != null">
				job_group,
			</if>
			<if test="jobStatus != null">
				job_status,
			</if>
			<if test="cronExpression != null">
				cron_expression,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="beanClass != null">
				bean_class,
			</if>
			<if test="isConcurrent != null">
				is_concurrent,
			</if>
			<if test="springId != null">
				spring_id,
			</if>
			<if test="methodName != null">
				method_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="jobId != null">
				#{jobId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="jobName != null">
				#{jobName,jdbcType=VARCHAR},
			</if>
			<if test="jobGroup != null">
				#{jobGroup,jdbcType=VARCHAR},
			</if>
			<if test="jobStatus != null">
				#{jobStatus,jdbcType=VARCHAR},
			</if>
			<if test="cronExpression != null">
				#{cronExpression,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="beanClass != null">
				#{beanClass,jdbcType=VARCHAR},
			</if>
			<if test="isConcurrent != null">
				#{isConcurrent,jdbcType=VARCHAR},
			</if>
			<if test="springId != null">
				#{springId,jdbcType=VARCHAR},
			</if>
			<if test="methodName != null">
				#{methodName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tedu.base.task.model.ScheduleJobModel">
		update task_schedule_job set
		update_time = now(),
		name = ${name},
		status = ${Status},
		cron_expression = ${expression},
		concurrent = ${concurrent}
		<if test="description != null">
			,description = ${description}
		</if>
		where id =${description}
	</update>
	<update id="updateByPrimaryKeySelective1" parameterType="Map">
		update task_schedule_param set
		value = ${value},
		name = ${name}
		where job_id =${id}
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="Map">
		update task_schedule_job
		update_time = now(),
		name = ${name},
		status = ${Status},
		cron_expression = ${expression},
		concurrent = ${concurrent}
		<if test="description != null">
			,description = ${description}
		</if>
		where id =${description}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.tedu.base.task.model.ScheduleJobModel">
		update task_schedule_job
		set create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		job_name = #{jobName,jdbcType=VARCHAR},
		job_group = #{jobGroup,jdbcType=VARCHAR},
		job_status = #{jobStatus,jdbcType=VARCHAR},
		cron_expression = #{cronExpression,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		bean_class = #{beanClass,jdbcType=VARCHAR},
		is_concurrent = #{isConcurrent,jdbcType=getAll},
		spring_id = #{springId,jdbcType=VARCHAR},
		method_name = #{methodName,jdbcType=VARCHAR}
		where job_id = #{jobId,jdbcType=BIGINT}
	</update> -->
	<select id="getAll" resultMap="BaseResultMap" parameterType="String" >
		select
		j.id,
			j.`name`,
			d1.`code` as `status`,
			d2.`code` as `concurrent`,
			d3.`code` as type,
			j.cron_expression as expression,
			j.update_time as updateTime,
			concat(GROUP_CONCAT(p.`name`),'|',GROUP_CONCAT(p. VALUE)) as param
		from
			t_schedule_job j
		left join t_schedule_param p on p.job_id = j.id
		left join t_dict d1 on d1.`code` = j.`status`
		and d1.cata_code = 't_schedule_job.status'
		left join t_dict d2 on d2.`code` = j. concurrent
		and d2.cata_code = 't_schedule_job.concurrent'
		left join t_dict d3 on d3.`code` = j.type
		and d3.cata_code = 't_schedule_job.type'
		left join t_dict d4 on d4.`code` = j.type
		and d4.cata_code = 't_schedule_param.name'
		<if test="_parameter!=null and _parameter!=''">
		where j.id=#{_parameter}
		</if>
		group by
			j.id
		ORDER BY j.update_time DESC
	</select>
	 <insert id="insertLog" parameterType="Map">
	 insert into t_job_log(job_id,create_time,cost,type,concurrent,param,result)values(#{jobId},now(),#{cost},#{type},#{concurrent},#{param},#{result})
	 </insert>
	<select id="getFailEmail"  resultMap="EmailResultMap">
	select address,send_name,char_set,receive_name, content, subject,sent_date,id,send_count,result from t_email_record
	where result='fail' 
	<![CDATA[
	and send_count<=3 
	]]>  
	</select>
	<update id="setEmailSendResult">
		update t_email_record set update_time=now(),result='success',send_count=send_count+1
			where id in (
            <foreach collection="ids" item="id" index="index" separator="," >    
                #{id}   
            </foreach> 
			)     
	</update>
	 <insert id="insertEmail" parameterType="java.util.List">
	 insert into t_email_record(address,send_name,char_set,receive_name, content, subject,sent_date,result,create_time,create_by,update_time,update_by)values
	  <foreach collection="list" item="item" index="index" separator="," >
	 (#{item.address},#{item.sendName},#{item.charSet},#{item.receiveName},#{item.content},#{item.subject},#{item.sentDate},#{item.result},now(),#{item.createBy},now(),#{item.updateBy})
	  </foreach>
	 </insert>
</mapper>